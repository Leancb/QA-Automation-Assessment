name: CI

"on":
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

env:
  CI: true

jobs:
  # =======================
  # API TESTS (CYPRESS)
  # =======================
  api_tests:
    name: API (Cypress)
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          cache-dependency-path: api-tests/package-lock.json

      - name: Install deps
        working-directory: api-tests
        run: npm ci
        env:
          CYPRESS_REQRES_API_KEY: ${{ secrets.REQRES_API_KEY }}

      - name: Run Cypress API tests
        working-directory: api-tests
        run: npx cypress run
        env:
          CYPRESS_REQRES_API_KEY: ${{ secrets.REQRES_API_KEY }}

      - name: Upload Cypress reports (API)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: cypress-api-reports
          path: |
            api-tests/cypress/reports/**
            api-tests/cypress/screenshots/**
          retention-days: 7

  # =======================
  # E2E TESTS (CYPRESS + CUCUMBER)
  # =======================
  e2e_tests:
    name: E2E Web (Cypress + Cucumber)
    runs-on: ubuntu-latest
    timeout-minutes: 25
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          cache-dependency-path: e2e-tests/package-lock.json

      - name: Install deps
        working-directory: e2e-tests
        run: npm ci

      - name: Run Cypress E2E (Cucumber)
        working-directory: e2e-tests
        run: npx cypress run --config-file cypress.config.cjs

      - name: Upload Cypress reports (E2E)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: cypress-e2e-reports
          path: |
            e2e-tests/cypress/reports/**
            e2e-tests/cypress/screenshots/**
          retention-days: 7

  # =======================
  # MOBILE TESTS (APPIUM + ANDROID EMULATOR)
  # =======================
  mobile_tests:
    name: Mobile (Android - Appium UiAutomator2)
    runs-on: ubuntu-latest
    timeout-minutes: 45

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          cache-dependency-path: mobile-tests/package-lock.json

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Accept Android licenses
        run: yes | sdkmanager --licenses

      - name: Install Android components (API 30)
        run: |
          sdkmanager "platforms;android-30" "platform-tools" "emulator" \
                     "system-images;android-30;google_apis;x86_64"

      - name: Create AVD
        run: |
          echo "no" | avdmanager create avd -n ci-avd \
            -k "system-images;android-30;google_apis;x86_64" \
            --device "pixel"

      - name: Boot emulator (headless)
        run: |
          nohup emulator -avd ci-avd -no-window -no-audio -no-snapshot -no-boot-anim \
               -gpu swiftshader_indirect -accel off >/dev/null 2>&1 &
          adb wait-for-device
          adb shell 'while [[ $(getprop sys.boot_completed) != "1" ]]; do sleep 1; done'
          adb shell input keyevent 82

      - name: Install project deps (mobile-tests)
        working-directory: mobile-tests
        run: npm ci

      - name: Install Appium UiAutomator2 driver
        working-directory: mobile-tests
        run: npx appium driver install uiautomator2

      - name: Verificar APK
        run: ls -lh mobile-tests/app/*.apk

      - name: Run WDIO tests
        working-directory: mobile-tests
        run: npx wdio run wdio.conf.cjs

      - name: Upload Mobile logs/artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: mobile-artifacts
          path: |
            mobile-tests/reports/**
          retention-days: 7

  # =======================
  # LOAD TESTS (JMETER)
  # =======================
  load_tests:
    name: Load (JMeter)
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Download Apache JMeter
        run: |
          JMETER_VERSION=5.6.3
          curl -sL https://downloads.apache.org/jmeter/binaries/apache-jmeter-${JMETER_VERSION}.tgz -o jmeter.tgz \
          || curl -sL https://archive.apache.org/dist/jmeter/binaries/apache-jmeter-${JMETER_VERSION}.tgz -o jmeter.tgz
          tar -xzf jmeter.tgz
          echo "$PWD/apache-jmeter-${JMETER_VERSION}/bin" >> $GITHUB_PATH

      - name: Run JMeter non-GUI
        run: |
          mkdir -p load-tests/results load-tests/reports
          jmeter -n \
            -t load-tests/jmeter-test-plan.jmx \
            -l load-tests/results/results.jtl \
            -e -o load-tests/reports \
            -Jjmeter.save.saveservice.output_format=csv \
            -Jjmeter.save.saveservice.assertion_results=none \
            -Jjmeter.save.saveservice.response_data.on_error=false \
            -Jjmeter.save.saveservice.bytes=true \
            -Jjmeter.save.saveservice.label=true \
            -Jjmeter.save.saveservice.latency=true \
            -Jjmeter.save.saveservice.connect_time=true \
            -Jjmeter.save.saveservice.response_code=true \
            -Jjmeter.save.saveservice.response_message=true \
            -Jjmeter.save.saveservice.successful=true \
            -Jjmeter.save.saveservice.thread_name=true \
            -Jjmeter.save.saveservice.timeStamp=true

      - name: Upload JMeter report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: jmeter-report
          path: |
            load-tests/reports/**
            load-tests/results/results.jtl
          retention-days: 3
